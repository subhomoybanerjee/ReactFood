{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\india\\\\Desktop\\\\code\\\\react\\\\foodProject\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Cards from \"../UI/Cards\";\nimport DUMMY_MEALS from \"./dummy-meals\";\nimport MealItem from \"./MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AvailableMeals() {\n  _s();\n\n  const temp = DUMMY_MEALS;\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const response = await fetch('https://moyreactdb-default-rtdb.firebaseio.com/meals.json');\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    };\n\n    fetchMeals();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mealsss\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n        id: meal.id,\n        name: meal.name,\n        description: meal.description,\n        price: meal.price\n      }, meal.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AvailableMeals, \"X4UGABiTAvwBbHKNNhAiWWaGl7I=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Cards","DUMMY_MEALS","MealItem","AvailableMeals","temp","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","data","json","loadedMeals","key","push","id","name","description","price","map","meal"],"sources":["C:/Users/india/Desktop/code/react/foodProject/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport Cards from \"../UI/Cards\"\r\nimport DUMMY_MEALS from \"./dummy-meals\"\r\nimport MealItem from \"./MealItem\"\r\n\r\nfunction AvailableMeals(){\r\n    const temp = DUMMY_MEALS\r\n\r\n    const [meals,setMeals]=useState([])\r\n    const [isLoading,setIsLoading]=useState(false)\r\n    \r\n    useEffect(()=>{\r\n        const fetchMeals=async()=>{\r\n\r\n            setIsLoading(true)\r\n            const response=await fetch('https://moyreactdb-default-rtdb.firebaseio.com/meals.json')\r\n            const data=await response.json()\r\n            \r\n            const loadedMeals=[]\r\n            for(const key in data){\r\n                loadedMeals.push({\r\n                    id:key,\r\n                    name:data[key].name,\r\n                    description:data[key].description,\r\n                    price:data[key].price\r\n                })\r\n            }\r\n        setMeals(loadedMeals)\r\n\r\n        }\r\n        fetchMeals()\r\n    },[])\r\n    \r\n\r\n    return(\r\n        <div className=\"mealsss\">\r\n            \r\n            <ul>\r\n                {\r\n                    meals.map(meal=>(\r\n                        \r\n                            <MealItem\r\n                                key={meal.id}\r\n                                id={meal.id}\r\n                                name={meal.name}\r\n                                description={meal.description}\r\n                                price={meal.price}\r\n                            />\r\n                        \r\n                    ))\r\n                }\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableMeals"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,cAAT,GAAyB;EAAA;;EACrB,MAAMC,IAAI,GAAGH,WAAb;EAEA,MAAM,CAACI,KAAD,EAAOC,QAAP,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;EACA,MAAM,CAACQ,SAAD,EAAWC,YAAX,IAAyBT,QAAQ,CAAC,KAAD,CAAvC;EAEAD,SAAS,CAAC,MAAI;IACV,MAAMW,UAAU,GAAC,YAAS;MAEtBD,YAAY,CAAC,IAAD,CAAZ;MACA,MAAME,QAAQ,GAAC,MAAMC,KAAK,CAAC,2DAAD,CAA1B;MACA,MAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAjB;MAEA,MAAMC,WAAW,GAAC,EAAlB;;MACA,KAAI,MAAMC,GAAV,IAAiBH,IAAjB,EAAsB;QAClBE,WAAW,CAACE,IAAZ,CAAiB;UACbC,EAAE,EAACF,GADU;UAEbG,IAAI,EAACN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFF;UAGbC,WAAW,EAACP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHT;UAIbC,KAAK,EAACR,IAAI,CAACG,GAAD,CAAJ,CAAUK;QAJH,CAAjB;MAMH;;MACLd,QAAQ,CAACQ,WAAD,CAAR;IAEC,CAjBD;;IAkBAL,UAAU;EACb,CApBQ,EAoBP,EApBO,CAAT;EAuBA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,uBAEI;MAAA,UAEQJ,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBAEN,QAAC,QAAD;QAEI,EAAE,EAAEA,IAAI,CAACL,EAFb;QAGI,IAAI,EAAEK,IAAI,CAACJ,IAHf;QAII,WAAW,EAAEI,IAAI,CAACH,WAJtB;QAKI,KAAK,EAAEG,IAAI,CAACF;MALhB,GACSE,IAAI,CAACL,EADd;QAAA;QAAA;QAAA;MAAA,QAFR;IAFR;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH;;GAlDQd,c;;KAAAA,c;AAoDT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}